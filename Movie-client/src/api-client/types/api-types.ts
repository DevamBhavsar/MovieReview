/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/movies/{imdbId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getMovieByImdbId"];
        put: operations["updateMovie"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reviews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createReview"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["registerUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllMovies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hello": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["helloWorld"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/activate-account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["confirm"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        GrantedAuthority: {
            authority?: string;
        };
        Movies: {
            id?: components["schemas"]["ObjectId"];
            imdbId: string;
            title: string;
            releaseDate?: string;
            trailerLink?: string;
            poster?: string;
            genres?: string[];
            backdrops?: string[];
            reviewIds?: components["schemas"]["Reviews"][];
        };
        ObjectId: {
            /** Format: int32 */
            timestamp?: number;
            /** Format: date-time */
            date?: string;
        };
        Reviews: {
            id?: string;
            /** Format: date-time */
            createdDate?: string;
            /** Format: date-time */
            lastModifiedDate?: string;
            createdBy?: string;
            lastModifiedBy?: string;
            body: string;
            movie?: components["schemas"]["Movies"];
            user?: components["schemas"]["User"];
        };
        Role: {
            id?: string;
            name?: string;
            /** Format: date-time */
            createdDate: string;
            /** Format: date-time */
            lastUpdatedDate: string;
        };
        User: {
            id?: string;
            username: string;
            email: string;
            enabled?: boolean;
            accountLocked?: boolean;
            /** Format: date-time */
            createdDate: string;
            /** Format: date-time */
            lastUpdatedDate: string;
            roles?: components["schemas"]["Role"][];
            authorities?: components["schemas"]["GrantedAuthority"][];
            accountNonExpired?: boolean;
            accountNonLocked?: boolean;
            credentialsNonExpired?: boolean;
            name?: string;
        };
        SignupRequest: {
            username: string;
            email: string;
            password: string;
        };
        LoginRequest: {
            email: string;
            password: string;
        };
        LoginResponse: {
            token?: string;
        };
        MovieWithReviewsDTO: {
            imdbId?: string;
            title?: string;
            releaseDate?: string;
            trailerLink?: string;
            poster?: string;
            genres?: string[];
            backdrops?: string[];
            reviews?: components["schemas"]["ReviewDTO"][];
        };
        ReviewDTO: {
            body?: string;
            username?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getMovieByImdbId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                imdbId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": components["schemas"]["MovieWithReviewsDTO"];
                };
            };
        };
    };
    updateMovie: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                imdbId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Movies"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": components["schemas"]["Movies"];
                };
            };
        };
    };
    createReview: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Reviews"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": components["schemas"]["Reviews"];
                };
            };
        };
    };
    registerUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignupRequest"];
            };
        };
        responses: {
            /** @description Accepted */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": Record<string, never>;
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": components["schemas"]["LoginResponse"];
                };
            };
        };
    };
    getAllMovies: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": components["schemas"]["Movies"][];
                };
            };
        };
    };
    helloWorld: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "-media-type=application/json": string;
                };
            };
        };
    };
    confirm: {
        parameters: {
            query: {
                token: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
